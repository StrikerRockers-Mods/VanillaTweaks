subprojects {
    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    //java.withSourcesJar()
    //java.withJavadocJar()
    jar {
        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : project.jar.archiveVersion,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestampe'              : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Build-On-Minecraft'      : minecraft_version
            ])
        }
    }

    repositories {
        mavenCentral()
        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }


    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}

task setupGithubActions() {
    doLast {
        exec {
            commandLine "echo", "##[set-output name=version;]${rootProject.version}"
        }
        exec {
            commandLine "echo", "##[set-output name=mod_name;]${rootProject.mod_name}"
        }
        exec {
            commandLine "echo", "##[set-output name=minecraft_version;]${rootProject.minecraft_version}"
        }
        exec {
            commandLine "echo", "##[set-output name=curse_project_id;]${rootProject.curse_project_id}"
        }
        exec {
            commandLine "echo", "##[set-output name=curse_versions_fabric;]${rootProject.curse_versions_fabric}"
        }
        exec {
            commandLine "echo", "##[set-output name=curse_versions_forge;]${rootProject.curse_versions_forge}"
        }
        if (rootProject.hasProperty('curse_relations_fabric')) {
            exec {
                commandLine "echo", "##[set-output name=curse_relations_fabric;]${rootProject.curse_relations_fabric}"
            }
        }
        if (rootProject.hasProperty('curse_relations_forge')) {
            exec {
                commandLine "echo", "##[set-output name=curse_relations_forge;]${rootProject.curse_relations_forge}"
            }
        }
    }
}